# Only use these if in an interactive prompt
case "$-" in *i*) ;; *) return ;; esac

# List the contents of a directory after going into it
function cd {
  builtin cd "$@" && ls -Alh
}


# Copy w/ progress
cp_p () {
  rsync -WavP --human-readable --progress $1 $2
}


# Takes a top level directory and goes into each child running git rebase pull.
# I use it to update all my OSS projects at once
function gupfolder() {
  find . -type d -depth 1 -exec echo {} \; -exec git --git-dir={}/.git --work-tree=$(pwd)/{} pull --rebase upstream master \; -exec echo "done" \;
}


# Create a directory, including its parent directories, and then cd into it
if type md | grep -q "alias for" 2>/dev/null; then
  unalias md
fi
if type md | grep -q "shell function" 2>/dev/null; then
  unfunction md
fi
function md { mkdir -p "$@" && builtin cd "$_" }


# `open` with no arguments opens the current directory, otherwise opens the given
# location
# Normalize `open` across Linux, macOS, and Windows.
function open() {
  if [ ! $(uname -s) = 'Darwin' ]; then
    if grep -q Microsoft /proc/version; then
      # Ubuntu on Windows using the Linux subsystem
      if [ $# -eq 0 ]; then explorer.exe .;
      else explorer.exe "$@";
      fi;
    else
      if [ $# -eq 0 ]; then xdg-open .;
      else xdg-open "$@";
      fi;
    fi
  fi
}


# Create a tmp working directory that is easy to get to
function refreshtest {
  if [ -d ~/Desktop/test ]; then
    builtin cd ~/Desktop && trash test
  fi
  md ~/Desktop/test
}


# Start an HTTP server from a directory, optionally specifying the port
function server() {
  local port="${1:-8000}"
  sleep 1 && open "http://localhost:${port}/" &
  # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
  # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}


# get gzipped size
function gz() {
  echo "orig size    (bytes): "
  cat "$1" | wc -c
  echo "gzipped size (bytes): "
  gzip -c "$1" | wc -c
}
